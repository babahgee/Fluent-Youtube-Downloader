(()=>{"use strict";var __webpack_modules__={878:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _: () => (/* binding */ renderToggles)\n/* harmony export */ });\n/* unused harmony export renderInputFields */\nfunction renderToggles() {\r\n    const toggleElements = document.querySelectorAll("toggle");\r\n    for (let toggleElement of toggleElements) {\r\n        const toggleClassNames = toggleElement.getAttribute("class");\r\n        const toggleForAttribute = toggleElement.getAttribute("for");\r\n        const toggleIdAttribute = toggleElement.getAttribute("id");\r\n        const newToggle = document.createElement("div");\r\n        newToggle.className = "styled-toggle";\r\n        const newToggleContainer = document.createElement("div");\r\n        newToggleContainer.className = "container";\r\n        newToggle.appendChild(newToggleContainer);\r\n        const newToggleThumb = document.createElement("div");\r\n        newToggleThumb.className = "styled-toggle__thumb";\r\n        newToggleContainer.appendChild(newToggleThumb);\r\n        newToggle.setAttribute("active", "false");\r\n        newToggle.addEventListener("click", function () {\r\n            const activeAttribute = newToggle.getAttribute("active");\r\n            if (activeAttribute === null)\r\n                return newToggle.setAttribute("active", "true");\r\n            if (activeAttribute === "false") {\r\n                newToggle.setAttribute("active", "true");\r\n            }\r\n            else {\r\n                newToggle.setAttribute("active", "false");\r\n            }\r\n            if (toggleForAttribute) {\r\n                const toggleActiveTextAttribute = toggleElement.getAttribute("active-text");\r\n                const toggleInActiveTextAttribute = toggleElement.getAttribute("inactive-text");\r\n                if (toggleActiveTextAttribute !== null && toggleInActiveTextAttribute !== null) {\r\n                    const toggleForElement = document.querySelector(toggleForAttribute);\r\n                    const currentActiveState = newToggle.getAttribute("active");\r\n                    if (currentActiveState && toggleForElement) {\r\n                        toggleForElement.innerText = (currentActiveState === "true") ? toggleActiveTextAttribute : toggleInActiveTextAttribute;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        newToggle.addEventListener("click", function () {\r\n            if (newToggle.classList.contains("active")) {\r\n                newToggle.classList.remove("active");\r\n            }\r\n            else {\r\n                newToggle.classList.add("active");\r\n            }\r\n        });\r\n        if (toggleClassNames)\r\n            newToggle.classList.add(toggleClassNames);\r\n        if (toggleIdAttribute)\r\n            newToggle.id = toggleIdAttribute;\r\n        toggleElement.replaceWith(newToggle);\r\n    }\r\n}\r\nfunction renderInputFields() {\r\n    const inputFieldElements = document.querySelectorAll("input-field");\r\n    for (let inputField of inputFieldElements) {\r\n        const inputFieldClassNames = inputField.getAttribute("class");\r\n        const inputFieldType = inputField.getAttribute("type");\r\n        const inputFieldSpellcheck = inputField.getAttribute("spellcheck");\r\n        const inputFieldAutoComplete = inputField.getAttribute("autocomplete");\r\n        const inputFieldValue = inputField.getAttribute("value");\r\n        const inputDisabled = inputField.getAttribute("disabled");\r\n        const inputId = inputField.getAttribute("id");\r\n        const root = document.createElement("div");\r\n        root.className = "styled-input-field " + crypto.randomUUID();\r\n        if (inputFieldClassNames) {\r\n            inputFieldClassNames.split(" ").forEach(function (className) {\r\n                root.classList.add(className);\r\n            });\r\n        }\r\n        root.setAttribute("type", inputFieldType !== null ? inputFieldType : "text");\r\n        root.setAttribute("value", "");\r\n        root.setAttribute("is-focused", "false");\r\n        root.setAttribute("is-disabled", inputDisabled !== null ? "true" : "false");\r\n        root.setAttribute("id", inputId !== null ? inputId : "");\r\n        const rootInput = document.createElement("input");\r\n        rootInput.className = "styled-input-field__input";\r\n        rootInput.type = (inputFieldType !== null) ? inputFieldType : "text";\r\n        rootInput.spellcheck = (inputFieldSpellcheck !== null) ? inputFieldSpellcheck : true;\r\n        rootInput.autocomplete = (inputFieldAutoComplete !== null) ? inputFieldAutoComplete : "on";\r\n        rootInput.value = (inputFieldValue !== null) ? inputFieldValue : "";\r\n        rootInput.disabled = (inputDisabled !== null) ? true : false;\r\n        rootInput.addEventListener("focus", function () {\r\n            if (!root.classList.contains("focused"))\r\n                root.classList.add("focused");\r\n            root.setAttribute("is-focused", "true");\r\n        });\r\n        rootInput.addEventListener("blur", function () {\r\n            if (root.classList.contains("focused"))\r\n                root.classList.remove("focused");\r\n            root.setAttribute("is-focused", "false");\r\n        });\r\n        rootInput.addEventListener("input", function () {\r\n            const inputValue = rootInput.value;\r\n            root.setAttribute("value", inputValue);\r\n        });\r\n        root.appendChild(rootInput);\r\n        inputField.replaceWith(root);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://fluent-youtube-downloader/./application/scripts/handlers/dom-generator.ts?')},688:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hl: () => (/* binding */ initializeSideMenu)\n/* harmony export */ });\n/* unused harmony exports collapseSideMenu, expandSideMenu */\nfunction collapseSideMenu() {\r\n    const sideMenu = document.querySelector(".app-side-menu"), app = document.querySelector(".app");\r\n    if (sideMenu === null || app === null)\r\n        return;\r\n    if (!sideMenu.classList.contains("collapsed"))\r\n        sideMenu.classList.add("collapsed");\r\n    if (!app.classList.contains("side-menu-collapsed"))\r\n        app.classList.add("side-menu-collapsed");\r\n}\r\nfunction expandSideMenu() {\r\n    const sideMenu = document.querySelector(".app-side-menu"), app = document.querySelector(".app");\r\n    if (sideMenu === null || app === null)\r\n        return;\r\n    if (sideMenu.classList.contains("collapsed"))\r\n        sideMenu.classList.remove("collapsed");\r\n    if (app.classList.contains("side-menu-collapsed"))\r\n        app.classList.remove("side-menu-collapsed");\r\n}\r\nfunction initializeSideMenu() {\r\n    const sideMenu = document.querySelector(".app-side-menu");\r\n    if (sideMenu === null)\r\n        return;\r\n    const menuButtons = sideMenu.querySelectorAll(".side-menu__button");\r\n    const menuExpandButton = sideMenu.querySelector(".expand-button");\r\n    menuExpandButton === null || menuExpandButton === void 0 ? void 0 : menuExpandButton.addEventListener("click", function () {\r\n        if (sideMenu.classList.contains("collapsed")) {\r\n            expandSideMenu();\r\n        }\r\n        else {\r\n            collapseSideMenu();\r\n        }\r\n    });\r\n    menuButtons.forEach(function (button) {\r\n        const hasChangableClassName = button.classList.contains("changable");\r\n        if (!hasChangableClassName)\r\n            return;\r\n        button.addEventListener("click", function () {\r\n            menuButtons.forEach(btn => btn.classList.remove("active"));\r\n            button.classList.add("active");\r\n        });\r\n    });\r\n    let isHoveringOverMenu = false;\r\n    let activeTimeout = null;\r\n    sideMenu.addEventListener("mouseenter", function () {\r\n        isHoveringOverMenu = true;\r\n    });\r\n    sideMenu.addEventListener("mouseleave", function () {\r\n        isHoveringOverMenu = false;\r\n        if (activeTimeout !== null)\r\n            window.clearTimeout(activeTimeout);\r\n        activeTimeout = null;\r\n    });\r\n    sideMenu.addEventListener("mousemove", function () {\r\n        if (activeTimeout !== null)\r\n            return;\r\n        activeTimeout = window.setTimeout(function () {\r\n            if (sideMenu.classList.contains("collapsed"))\r\n                expandSideMenu();\r\n        }, 1000);\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://fluent-youtube-downloader/./application/scripts/handlers/side-menu.ts?')},475:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JD: () => (/* binding */ requestPage)\n/* harmony export */ });\n/* unused harmony exports setTitle, removeCurrentSpaStylesheets, removeCurrentSpaScripts, setStylesheets, setScripts, replaceChildren, swapPageContents, formatNewDocument */\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nconst renderContainer = document.querySelector(".content-swappable");\r\nfunction waitFor(ms) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, ms);\r\n        });\r\n    });\r\n}\r\nfunction setTitle(config) {\r\n    if (config === null)\r\n        return null;\r\n    const spaTitle = config.querySelector("spa-title");\r\n    const oldTitle = document.head.querySelector("title");\r\n    if (spaTitle === null || oldTitle === null)\r\n        return null;\r\n    const newTitle = document.createElement("title");\r\n    newTitle.textContent = spaTitle.innerText;\r\n    oldTitle.replaceWith(newTitle);\r\n    return newTitle;\r\n}\r\nfunction removeCurrentSpaStylesheets() {\r\n    const currentStylesheets = document.querySelectorAll("link");\r\n    for (let stylesheet of currentStylesheets) {\r\n        const spaAttribute = stylesheet.getAttribute("spa-element-type");\r\n        if (spaAttribute === "spa-stylesheet")\r\n            stylesheet.remove();\r\n    }\r\n}\r\nfunction removeCurrentSpaScripts() {\r\n    const currentScripts = document.querySelectorAll("script");\r\n    for (let stylesheet of currentScripts) {\r\n        const spaAttribute = stylesheet.getAttribute("spa-element-type");\r\n        if (spaAttribute === "spa-script")\r\n            stylesheet.remove();\r\n    }\r\n}\r\nfunction setStylesheets(config) {\r\n    if (config === null)\r\n        return;\r\n    const spaStylesheetList = config.querySelector("spa-stylesheets");\r\n    if (spaStylesheetList === null)\r\n        return;\r\n    removeCurrentSpaStylesheets();\r\n    const spaStylesheets = spaStylesheetList.querySelectorAll("spa-stylesheet");\r\n    for (let spaStylesheet of spaStylesheets) {\r\n        const attributeNames = spaStylesheet.getAttributeNames();\r\n        const stylesheetLink = document.createElement("link");\r\n        stylesheetLink.setAttribute("spa-element-type", "spa-stylesheet");\r\n        stylesheetLink.setAttribute("spa-element-id", crypto.randomUUID());\r\n        for (let attributeName of attributeNames) {\r\n            const spaStylesheetAttribute = spaStylesheet.getAttribute(attributeName);\r\n            if (spaStylesheetAttribute !== null)\r\n                stylesheetLink.setAttribute(attributeName, spaStylesheetAttribute);\r\n        }\r\n        document.head.appendChild(stylesheetLink);\r\n    }\r\n}\r\nfunction setScripts(config) {\r\n    if (config === null)\r\n        return;\r\n    const spaScriptsList = config.querySelector("spa-scripts");\r\n    if (spaScriptsList === null)\r\n        return;\r\n    removeCurrentSpaScripts();\r\n    const spaScripts = spaScriptsList.querySelectorAll("spa-script");\r\n    for (let spaScript of spaScripts) {\r\n        const attributeNames = spaScript.getAttributeNames();\r\n        const scriptElement = document.createElement("script");\r\n        scriptElement.setAttribute("spa-element-type", "spa-script");\r\n        scriptElement.setAttribute("spa-element-id", crypto.randomUUID());\r\n        for (let attributeName of attributeNames) {\r\n            const spaStylesheetAttribute = spaScript.getAttribute(attributeName);\r\n            if (spaStylesheetAttribute !== null)\r\n                scriptElement.setAttribute(attributeName, spaStylesheetAttribute);\r\n        }\r\n        document.body.appendChild(scriptElement);\r\n    }\r\n}\r\nfunction replaceChildren(contents) {\r\n    if (renderContainer === null || contents === null)\r\n        return;\r\n    renderContainer.replaceChildren(...contents.childNodes);\r\n}\r\nfunction swapPageContents(newDoc, response) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (renderContainer === null)\r\n            return;\r\n        renderContainer.classList.remove("fadein");\r\n        yield waitFor(100);\r\n        const documentBody = newDoc.body, documentConfig = documentBody.querySelector("spa-config"), documentContent = documentBody.querySelector("spa-dom-content");\r\n        setTitle(documentConfig);\r\n        setStylesheets(documentConfig);\r\n        setScripts(documentConfig);\r\n        replaceChildren(documentContent);\r\n        renderContainer.classList.add("fadein");\r\n        renderContainer.setAttribute("data-url", response.url);\r\n    });\r\n}\r\nfunction formatNewDocument(html) {\r\n    const parser = new DOMParser();\r\n    return parser.parseFromString(html, "text/html");\r\n}\r\nfunction requestPage(pageUrl) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        fetch(pageUrl, { method: "GET", headers: { "Content-Type": "text/html" } })\r\n            .then(function (response) {\r\n            response.text()\r\n                .then(function (responseText) {\r\n                const formattedDocument = formatNewDocument(responseText);\r\n                return swapPageContents(formattedDocument, response);\r\n            }).catch(function (err) {\r\n                console.log(err.message);\r\n            });\r\n        }).catch(function (err) {\r\n            console.log(err.message);\r\n        });\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://fluent-youtube-downloader/./application/scripts/handlers/spa-handler.ts?')},131:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   c: () => (/* binding */ initializeTitleBar)\n/* harmony export */ });\nfunction initializeTitleBar() {\r\n    const titlebar = document.querySelector(".titlebar");\r\n    if (titlebar === null)\r\n        return;\r\n    const controlButtons = titlebar.querySelectorAll(".titlebar__control-buttons__button");\r\n    controlButtons.forEach(function (button) {\r\n        const dataActionAttribute = button.getAttribute("data-action");\r\n        if (dataActionAttribute === null)\r\n            return;\r\n        button.addEventListener("click", function () {\r\n            fetch("/window/control-event", {\r\n                method: "POST",\r\n                headers: {\r\n                    "Content-Type": "application/json"\r\n                },\r\n                body: JSON.stringify({\r\n                    action: dataActionAttribute\r\n                })\r\n            });\r\n        });\r\n    });\r\n}\r\n\n\n//# sourceURL=webpack://fluent-youtube-downloader/./application/scripts/handlers/titlebar.ts?')},243:(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{eval('/* harmony import */ var _handlers_titlebar__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(131);\n/* harmony import */ var _handlers_side_menu__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(688);\n/* harmony import */ var _handlers_dom_generator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(878);\n/* harmony import */ var _handlers_spa_handler__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(475);\n\r\n\r\n\r\n\r\nconst navigationButtons = document.querySelectorAll(".navigation-button");\r\nconst appLoader = document.querySelector(".app-loader");\r\nnavigationButtons.forEach(function (button) {\r\n    const requestUrl = button.getAttribute("data-href");\r\n    if (requestUrl === null)\r\n        return;\r\n    button.addEventListener("click", function (event) {\r\n        (0,_handlers_spa_handler__WEBPACK_IMPORTED_MODULE_0__/* .requestPage */ .JD)(requestUrl);\r\n    });\r\n});\r\nwindow.addEventListener("load", function () {\r\n    (0,_handlers_spa_handler__WEBPACK_IMPORTED_MODULE_0__/* .requestPage */ .JD)("/tabs/convert");\r\n    (0,_handlers_dom_generator__WEBPACK_IMPORTED_MODULE_1__/* .renderToggles */ ._)();\r\n    (0,_handlers_titlebar__WEBPACK_IMPORTED_MODULE_2__/* .initializeTitleBar */ .c)();\r\n    (0,_handlers_side_menu__WEBPACK_IMPORTED_MODULE_3__/* .initializeSideMenu */ .hl)();\r\n    this.setTimeout(function () {\r\n        appLoader.classList.add("fadeout");\r\n    }, 500);\r\n});\r\n\n\n//# sourceURL=webpack://fluent-youtube-downloader/./application/scripts/index.ts?')}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var n=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](n,n.exports,__webpack_require__),n.exports}__webpack_require__.d=(e,t)=>{for(var n in t)__webpack_require__.o(t,n)&&!__webpack_require__.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},__webpack_require__.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var __webpack_exports__=__webpack_require__(243)})();